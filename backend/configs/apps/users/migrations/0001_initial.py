# Generated by Django 5.0.10 on 2025-03-14 13:34

import apps.utils.helpers.model.base
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.CharField(editable=False, max_length=15, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('wallet_address', models.CharField(max_length=42, null=True, unique=True)),
                ('nonce', models.CharField(max_length=100, null=True)),
                ('role', models.CharField(choices=[('ADMINISTRATOR', 'ADMINISTRATOR'), ('USER', 'USER'), ('BUSINESS', 'BUSINESS')], default='USER', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('points', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('is_email_verified', models.BooleanField(default=False, verbose_name='Email Verified')),
                ('is_phone_number_verified', models.BooleanField(default=False, verbose_name='Phone Number Verified')),
                ('otp', models.CharField(blank=True, default='0000', max_length=6, null=True, verbose_name='Otp')),
                ('otp_expiration', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_last_modified', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('refresh', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('access', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
                ('device_os', models.CharField(blank=True, max_length=255, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255, null=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_session', to=settings.AUTH_USER_MODEL, verbose_name='User session')),
            ],
            options={
                'verbose_name': 'User Session',
                'verbose_name_plural': 'User Sessions',
            },
            bases=(apps.utils.helpers.model.base.BaseModelBaseMixin, models.Model),
        ),
    ]
